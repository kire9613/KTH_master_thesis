<?xml version="1.0"?>
<launch>

    <arg name="use_matplotlib" default="false"/>
    <arg name="is_sim" default="true"/>
    <arg name="use_rviz" default="true"/>
    <arg name="use_lidar" default="true"/>
    <arg name="show_tree" default="false"/>

    <!--
    <rosparam command="load" file="$(find svea_core)/resources/params/q1_polygons.yaml" />
    <rosparam command="load" file="$(find svea_core)/resources/params/q1floor_track.yaml" />
    <arg name="map_file" default="$(find svea_core)/resources/maps/q1.yaml" />
    <arg name="start_pt" default= '17.9, 3.54, 3.1, 0'/>
    -->

    <rosparam command="load" file="$(find svea_core)/resources/params/obstacles.yaml" />
    <rosparam command="load" file="$(find svea_core)/resources/params/floor2_track.yaml" />
    <arg name="map_file" default="$(find svea_core)/resources/maps/floor2.yaml" />
    <arg name="start_pt" default= '-5.47, -12.0, 0.8978652, 0'/>

    <machine name="oscar" address="oscar-project.local" user="oscar" env-loader="/home/oscar/svea_starter/remote-env.sh"/>
    <machine name="adam" address="mrmixit-Predator-PH317-52.local" user="mrmixit" env-loader="/home/mrmixit/Project/svea_starter/remote-env.sh"/>
    <machine name="caroline" address="caroline-HP-Pavilion-Notebook.local" user="caroline" env-loader="/home/caroline/EL2425/svea_starter/remote-env.sh"/>
    <machine name="ylva" address="Harrison.local" user="ylva" env-loader="/home/ylva/el2425/svea_starter/remote-env.sh"/>
        

    <group if="$(eval is_sim == true)">
        <node type="rviz" name="rviz" pkg="rviz" args="-d $(find svea_core)/scripts/team4_project/rviz.rviz" />
        <node pkg="map_server" type="map_server" name="map_server" output="screen" args="$(arg map_file)" />
    </group>

    <node pkg="svea_core" type="team4_floor2_example.py" name="team4_floor2_example" output="screen">
        <param name="start_pt" value="$(arg start_pt)"/>
        <param name="use_rviz" value="$(arg use_rviz)"/>
        <param name="use_matplotlib" value="$(arg use_matplotlib)"/>
        <param name="is_sim" value="$(arg is_sim)"/>
	      <param name="use_lidar" value="$(arg use_lidar)"/>
    </node>

    <group if="$(eval is_sim == false)">
        <node pkg="svea_core" type="test_mapping.py" name="mapping" output="screen" machine="oscar"/>
        <node pkg="svea_core" type="obstacle_detection.py" name="obstacle_detection" output="screen" machine="oscar"/>
        <node pkg="svea_core" type="astar_server.py" name="astar_planning" output="screen" machine="adam"/>
    </group>
    <group if="$(eval is_sim == true)">
        <node pkg="svea_core" type="test_mapping.py" name="mapping" output="screen"/>
        <node pkg="svea_core" type="obstacle_detection.py" name="obstacle_detection" output="screen"/>
        <node pkg="svea_core" type="astar_server.py" name="astar_planning" output="screen"/>
    </group>

    <node pkg="svea_core" type="task_switching.py" name="task_switching" output="screen">
        <param name="show_tree" value="$(arg show_tree)"/>
    </node>

    <group unless="$(eval is_sim == true)">
	<node pkg="rosserial_python" type="serial_node.py" name="serial_node">
             <param name="port" value="/dev/ttyACM0"/>
             <param name="baud" value="250000"/>
	</node>
        <include file="$(find svea_sensors)/launch/localize.launch">
            <arg name="use_rs" value="true"/>
            <arg name="file_name" value="$(arg map_file)"/>
        </include>
    </group>

</launch>
