<?xml version="1.0"?>

<launch>
   <!-- remap the topic name of camera stream -->
   <remap from="/camera/image_raw/compressed" to="/camera/image/compressed"/>

   <!-- launch video stream -->
   <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="camera" />
        <!-- means video device 2, /dev/video2, USB-port, computer webcam is 0, on SVEA it's 1 -->
        <arg name="video_stream_provider" value="1" />
        <!-- set camera fps to (if the device allows) -->
        <arg name="set_camera_fps" value="120"/>
        <!-- set buffer queue size of frame capturing to -->
        <arg name="buffer_queue_size" value="10" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="120" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="webcam" />
        <!-- camera info loading -->
        <arg name="camera_info_url" value="file:///$(find svea_core)/camera/camera.yaml" />
        <!-- visualize on an image_view window the stream generated -->
        <arg name="visualize" value="false" />
   </include>

   <!-- launch aruco detect -->
   <include file="$(find svea_core)/launch/arucomod_detect.launch" >
        <arg name="camera" value="camera" />
        <arg name="fiducial_len" value="0.10" />
   </include>

  <!--node type="rviz" name="rviz" pkg="rviz" args="-d $(find svea_core)/resources/rviz/webcam_test.rviz" />vision_example-->

   <!-- transform from camera to base_link -->
   <!-- node pkg="tf2_ros" type="static_transform_publisher" name="base_link_broadcaster" args="0.09 0 0.215 0 -1.57 3.14 base_link webcam" /-->
   <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0 0 0 0 base_link webcam" />

   <node pkg="svea_core" type="aruco_vision.py" name="aruco_vision" output="screen" />

    <arg name="start_pt" default= '-8.01, -16.2, 0.9877181, 0.0'/>
    <arg name="use_rviz" default="true"/>
    <arg name="is_sim" default="true"/>
    <arg name="map_file" default="$(find svea_core)/resources/maps/floor2.yaml" />

    <group if="$(eval is_sim == true)">
        <node type="rviz" name="rviz" pkg="rviz" args="-d $(find svea_core)/resources/rviz/vision_example.rviz" />
        <node pkg="map_server" type="map_server" name="map_server" output="screen" args="$(arg map_file)" />
    </group>
    

    <!--for running on SVEA-->
    <group if="$(eval is_sim == false)">
        <include file="$(find svea_sensors)/launch/localize.launch">
            <arg name="use_rs" value="true"/>
            <arg name="file_name" value="$(arg map_file)"/>
        </include>

        <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
            <param name="port" value="/dev/ttyACM0"/>
            <param name="baud" value="250000"/>
        </node>
    </group>

    <node pkg="svea_core" type="vision_example.py" name="vision_example" output="screen">
        <param name="start_pt" value="$(arg start_pt)"/>
        <param name="use_rviz" value="$(arg use_rviz)"/>
        <param name="is_sim" value="$(arg is_sim)"/>
    </node>
</launch>
